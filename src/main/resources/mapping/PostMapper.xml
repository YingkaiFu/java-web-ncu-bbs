<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncu.strong.bbs.dao.PostMapper">
    <resultMap id="BaseResultMap" type="com.ncu.strong.bbs.po.Post">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="reply_id" jdbcType="INTEGER" property="replyId" />
        <result column="author_id" jdbcType="INTEGER" property="authorId" />
        <result column="setion_id" jdbcType="INTEGER" property="setionId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="mark" jdbcType="BIT" property="mark" />
        <result column="click_num" jdbcType="INTEGER" property="clickNum" />
        <result column="top" jdbcType="BIT" property="top" />
        <result column="post_theme_id" jdbcType="INTEGER" property="postThemeId" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="reply_num" jdbcType="INTEGER" property="replyNum"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickName"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>

    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ncu.strong.bbs.po.Post">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>

    <sql id="Base_Column_List">
        id, reply_id, author_id, setion_id, create_time, mark, click_num, top, post_theme_id,
        update_time
    </sql>

    <sql id="Blob_Column_List">
        content
    </sql>

    <!--通过主键查询-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from post
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--查询最热贴子-->
    <select id="selectHostPosts" resultMap="ResultMapWithBLOBs">
        select b.id, reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
    (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
    (select avatar from user_profile where user_account_id = author_id) as avatar
    from post as b
    where b.reply_id is null order by click_num desc limit 20;
    </select>

    <!--查询最新贴子-->
    <select id ="selectNewestPosts" resultMap="ResultMapWithBLOBs">
        select b.id, reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.reply_id is null order by update_time desc limit 20;
    </select>

    <!--通过用户id查询-->
    <select id = "selectByAuthorId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select b.id, reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.author_id = #{authorId,jdbcType = INTEGER}
    </select>

    <!--通过分区id查询-->
    <select id = "selectBySetionId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select b.id, reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.reply_id is null and b.setion_id = #{setionId,jdbcType = INTEGER}
    </select>

    <!--通过主题id查询-->
    <select id = "selectByThemeId" resultMap="ResultMapWithBLOBs">
        select b.id, reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.reply_id is null and b.post_theme_id = #{postThemeId,jdbcType = INTEGER}
    </select>

    <!--查询置顶帖-->
    <select id = "selectTopPosts" resultMap="ResultMapWithBLOBs">
        select b.id,author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.top = 0 and b.reply_id is  NULL and b.setion_id = #{setionId,jdbcType = INTEGER} ;
    </select>

    <!--查询精品贴-->
    <select id = "selectBoutiquePosts" resultMap="ResultMapWithBLOBs">
        select b.id,b.reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.mark = 0  and reply_id is null and b.setion_id = #{setionId,jdbcType = INTEGER};
    </select>

    <!--查询热门贴-->
    <select id = "selectHotPosts" resultMap="ResultMapWithBLOBs">
        select b.id,b.reply_id, author_id, setion_id, content, create_time, mark, top, post_theme_id, update_time, click_num,
        (select count(*) from post as a where a.reply_id = b.id) AS reply_num,(select nickname from user_profile where user_account_id = author_id) as nickname,
        (select avatar from user_profile where user_account_id = author_id) as avatar
        from post as b
        where b.reply_id is null and b.setion_id = #{setionId,jdbcType = INTEGER}
        order by click_num DESC LIMIT 20;
    </select>

    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from post
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <!--通过用户id删除-->
    <delete id = "deleteByAuthorId" parameterType="java.lang.Integer">
        delete from post
        where author_id = #{authorId,jdbcType=INTEGER}
    </delete>

    <!--通过分区id删除-->
    <delete id = "deleteBySetionId" parameterType="java.lang.Integer">
        delete from post
        where setion_id = #{setionId,jdbcType=INTEGER}
    </delete>

    <!--通过主题id删除-->
    <delete id = "deleteByThemeId" parameterType="java.lang.Integer">
        delete from post
        where post_theme_id = #{postThemeId,jdbcType=INTEGER}
    </delete>

    <!--添加贴子-->
    <insert id="insert" parameterType="com.ncu.strong.bbs.po.Post">
        insert into post (id, reply_id, author_id,
        setion_id, create_time, mark,
        click_num, top, post_theme_id,
        update_time, content)
        values (#{id,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
            #{setionId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{mark,jdbcType=BIT},
            #{clickNum,jdbcType=INTEGER}, #{top,jdbcType=BIT}, #{postThemeId,jdbcType=INTEGER},
            #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.ncu.strong.bbs.po.Post">
        insert into post
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="replyId != null">
                reply_id,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="setionId != null">
                setion_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="mark != null">
                mark,
            </if>
            <if test="clickNum != null">
                click_num,
            </if>
            <if test="top != null">
                top,
            </if>
            <if test="postThemeId != null">
                post_theme_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="replyId != null">
                #{replyId,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="setionId != null">
                #{setionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mark != null">
                #{mark,jdbcType=BIT},
            </if>
            <if test="clickNum != null">
                #{clickNum,jdbcType=INTEGER},
            </if>
            <if test="top != null">
                #{top,jdbcType=BIT},
            </if>
            <if test="postThemeId != null">
                #{postThemeId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <!--更新部分信息-->
    <update id="updateByPrimaryKeySelective" parameterType="com.ncu.strong.bbs.po.Post">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update post
        <set>
            <if test="replyId != null">
                reply_id = #{replyId,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="setionId != null">
                setion_id = #{setionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mark != null">
                mark = #{mark,jdbcType=BIT},
            </if>
            <if test="clickNum != null">
                click_num = #{clickNum,jdbcType=INTEGER},
            </if>
            <if test="top != null">
                top = #{top,jdbcType=BIT},
            </if>
            <if test="postThemeId != null">
                post_theme_id = #{postThemeId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ncu.strong.bbs.po.Post">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update post
        set reply_id = #{replyId,jdbcType=INTEGER},
        author_id = #{authorId,jdbcType=INTEGER},
        setion_id = #{setionId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        mark = #{mark,jdbcType=BIT},
        click_num = #{clickNum,jdbcType=INTEGER},
        top = #{top,jdbcType=BIT},
        post_theme_id = #{postThemeId,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ncu.strong.bbs.po.Post">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update post
        set reply_id = #{replyId,jdbcType=INTEGER},
        author_id = #{authorId,jdbcType=INTEGER},
        setion_id = #{setionId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        mark = #{mark,jdbcType=BIT},
        click_num = #{clickNum,jdbcType=INTEGER},
        top = #{top,jdbcType=BIT},
        post_theme_id = #{postThemeId,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>